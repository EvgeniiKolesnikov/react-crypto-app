{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/Loader.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","i","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Cryptocurrencies","cryptosList","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","extra","hoverable","price","marketCap","change","Option","Select","CryptoDetails","useParams","setTimePeriod","coinHistory","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","currentPrice","coinName","links","link","type","href","rel","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","LineChart","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Loader","App","exact","path","textAlign","color","configureStore","reducer","ReactDOM","render","StrictMode","basename","store","document","getElementById"],"mappings":"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","file":"static/js/main.5660ea9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import { Avatar, Button, Menu, Typography } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from '@ant-design/icons';\r\nimport icon from '../images/cryptocurrency.png';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    screenSize < 768 ? setActiveMenu(false) : setActiveMenu(true);\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className='nav-container'>\r\n      <div className='logo-container'>\r\n        <Avatar src={icon} size='large' />\r\n        <Typography.Title level={2} className='logo'>\r\n          <Link to='/'>Crypto</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className='menu-control-container'\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme='dark'>\r\n          <Menu.Item key='1' icon={<HomeOutlined />}>\r\n            <Link to='/'>Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='2' icon={<FundOutlined />}>\r\n            <Link to='/cryptocurrencies'>Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='3' icon={<MoneyCollectOutlined />}>\r\n            <Link to='/exchanges'>Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='4' icon={<BulbOutlined />}>\r\n            <Link to='/news'>News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n};\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () =>\r\n        createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n  useGetExchangesQuery,\r\n} = cryptoApi;\r\n","import { Col, Row, Statistic, Typography } from 'antd';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Cryptocurrencies, Loader, News } from '.';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n\r\n  // console.log(data);\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className='heading'>\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title='Total Cryptocurrencies' value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title='Total Exchanges'\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title='Total Market Cap'\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title='Total 24h Volume'\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title='Total Markets'\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <div className='home-heading-container'>\r\n        <Title level={2} className='home-title'>\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className='show-more'>\r\n          <Link to='/cryptocurrencies'>Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n\r\n      <div className='home-heading-container'>\r\n        <Title level={2} className='home-title'>\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className='show-more'>\r\n          <Link to='/news'>Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n\r\n    </>\r\n  );\r\n};\r\n","import millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\n\r\nimport { Loader } from '.';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nexport const Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  // console.log(data);\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange, i) => (\r\n          <Col span={24} key={i}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className='exchange-image'\r\n                        src={exchange.iconUrl}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import { Card, Col, Input, Row } from 'antd';\r\nimport millify from 'millify';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loader } from '.';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nexport const Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className='search-crypto'>\r\n          <Input\r\n            placeholder='Search Cryptocurrency'\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Row gutter={[32, 32]} className='crypto-card-container'>\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank} ${currency.name}`}\r\n                // eslint-disable-next-line jsx-a11y/alt-text\r\n                extra={<img className='crypto-image' src={currency.iconUrl} />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)} %</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  NumberOutlined,\r\n  CheckOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  ThunderboltOutlined,\r\n} from '@ant-design/icons';\r\nimport { Col, Row, Select, Typography } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport millify from 'millify';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from '../services/cryptoApi';\r\nimport { LineChart, Loader } from '.';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport const CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n\r\n  // console.log(data);\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    {\r\n      title: 'Price to USD',\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: '24h Volume',\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'All-time-high(daily avg.)',\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: 'Number Of Markets',\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: 'Number Of Exchanges',\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: 'Aprroved Supply',\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Total Supply',\r\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Circulating Supply',\r\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className='coin-detail-container'>\r\n      <Col className='coin-heading-container'>\r\n        <Title level={2} className='coin-name'>\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue='7d'\r\n        className='select-timeperiod'\r\n        placeholder='Select Timeperiod'\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        coinName={cryptoDetails.name}\r\n      />\r\n\r\n      <Col className='stats-container'>\r\n        <Col className='coin-value-statistics'>\r\n          <Col className='coin-value-statistics-heading'>\r\n            <Title level={3} className='coin-details-heading'>\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }, i) => (\r\n            <Col className='coin-stats' key={i}>\r\n              <Col className='coin-stats-name'>\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className='stats'>{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className='other-stats-info'>\r\n          <Col className='coin-value-statistics-heading'>\r\n            <Title level={3} className='coin-details-heading'>\r\n              Other Stats Info\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }, i) => (\r\n            <Col className='coin-stats' key={i}>\r\n              <Col className='coin-stats-name'>\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className='stats'>{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n\r\n      <Col className='coin-desc-link'>\r\n        <Row className='coin-desc'>\r\n          <Title level={3} className='coin-details-heading'>\r\n            What is {cryptoDetails.name}?\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className='coin-links'>\r\n          <Title level={3} className='coin-details-heading'>\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links?.map((link, i) => (\r\n            <Row className='coin-link' key={i}>\r\n              <Title level={5} className='link-name'>\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target='_blank' rel='noreferrer'>\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsApiHeaders = {\r\n  'x-bingapis-sdk': 'true',\r\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n  'x-rapidapi-key': `${process.env.REACT_APP_RAPIDAPI_KEY}`,\r\n};\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: 'cryptoNewsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import { Avatar, Card, Col, Row, Select, Typography } from 'antd';\r\nimport moment from 'moment';\r\nimport { useState } from 'react';\r\nimport { Loader } from '.';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage =\r\n  'https://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\r\n\r\nexport const News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  if (!cryptoNews?.value) return <Loader />;\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className='select-news'\r\n            placeholder='Select a crypto'\r\n            optionFilterProp='children'\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value='Cryptocurrency'>Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((coin, i) => (\r\n              <Option key={i} value={coin.name}>{coin.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews?.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className='news-card'>\r\n            <a href={news.url} target='_blank' rel='noreferrer'>\r\n              <div className='news-image-container'>\r\n                <Title level={4} className='news-title'>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                  style={{ maxWidth: '200px', maxHeight: '100px' }}\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt='news'\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description > 100\r\n                  ? `${news.description.substring(0, 100)} ...`\r\n                  : news.description}\r\n              </p>\r\n              <div className='provider-container'>\r\n                <div>\r\n                  <Avatar\r\n                    src={\r\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                      demoImage\r\n                    }\r\n                    alt='news'\r\n                  />\r\n                  <Text className='provider-name'>\r\n                    {news.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf('ss').fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n","import { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='chart-header'>\r\n        <Title level={2} className='chart-title'>\r\n          {coinName} Price Chart{' '}\r\n        </Title>\r\n        <Col className='price-container'>\r\n          <Title level={5} className='price-change'>\r\n            Change: {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className='current-price'>\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n","import { Spin } from 'antd';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Cryptocurrencies,\r\n  CryptoDetails,\r\n  Exchanges,\r\n  Homepage,\r\n  Navbar,\r\n  News,\r\n} from './components';\r\nimport './App.css';\r\nimport { Layout, Space, Typography } from 'antd';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='app'>\r\n      <div className='navbar'>\r\n        <Navbar />\r\n      </div>\r\n      <div className='main'>\r\n        <Layout>\r\n          <div className='routes'>\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <Homepage />\r\n              </Route>\r\n              <Route exact path='/exchanges'>\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path='/cryptocurrencies'>\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path='/crypto/:coinId'>\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path='/news'>\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className='footer'>\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ textAlign: 'center', color: 'white' }}\r\n          >\r\n            Crypto <br />\r\n            All rights not reserved.\r\n          </Typography.Title>\r\n\r\n          <Space>\r\n            <Link to='/'>Home</Link>\r\n            <Link to='/exchanges'>Exchanges</Link>\r\n            <Link to='/news'>News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename='/react-crypto-app'>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}